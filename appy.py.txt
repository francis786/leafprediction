import gradio as gr
import numpy as np
from keras.models import load_model
from keras.preprocessing import image
import json

# Load model
model = load_model("leaf_disease_model.h5")

# Load disease info
with open("disease_info.json", "r") as f:
    disease_info = json.load(f)

# Class labels
class_names = list(disease_info.keys())

# Prediction function
def predict_disease(img):
    img = img.resize((128, 128))
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array /= 255.0

    prediction = model.predict(img_array)
    predicted_index = np.argmax(prediction)
    predicted_label = class_names[predicted_index]
    confidence = round(100 * np.max(prediction), 2)

    # Extra info
    description = disease_info[predicted_label]["description"]
    spread = disease_info[predicted_label]["spread"]
    cure = disease_info[predicted_label]["cure"]

    result = f"âœ… Prediction: {predicted_label}\nðŸ“Š Confidence: {confidence}%\n\nðŸ©º Description: {description}\nðŸŒ± Spread: {spread}\nðŸ’Š Cure: {cure}"
    return result

# Gradio UI
input_image = gr.Image(type="pil")
output_text = gr.Textbox(label="Result")

gr.Interface(
    fn=predict_disease,
    inputs=input_image,
    outputs=output_text,
    title="Leaf Disease Detector ðŸŒ¿",
    description="Upload a leaf image to detect disease, view cure & spreading conditions."
).launch()